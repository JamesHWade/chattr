---
title: "Hospitals"
format: html
---
```{r}
tc_defaults()
```


```{r}
#| include: false
devtools::load_all()
tidychat_debug_set_false()
```

import the counties csv file

```{r}
iris
```

```{r}
library(readr)

counties <- read_csv("data/county-hospital.csv")
```

create a model the predicts the number of hospitals based on population


```{r}
library(tidymodels)

# Split data into training and testing sets
set.seed(123)
county_split <- initial_split(counties, prop = 0.7, strata = "state")
county_train <- training(county_split)
county_test <- testing(county_split)

# Create a recipe to preprocess the data
county_recipe <- recipe(hospitals ~ population, data = county_train) %>%
  step_log(population) %>%
  step_normalize(all_predictors())

# Create a linear regression model using the preprocessed data
county_lm <- linear_reg() %>%
  set_engine("lm") %>%
  set_mode("regression")

# Create a workflow to tie the recipe and model together
county_wf <- workflow() %>%
  add_recipe(county_recipe) %>%
  add_model(county_lm)

# Train the model on the training data
county_fit <- county_wf %>%
  fit(data = county_train)

# Make predictions on the testing data
county_pred <- county_fit %>%
  augment(new_data = county_test)

# Evaluate the model's performance
county_rmse <- county_pred %>%
  metrics(truth = hospitals, estimate = .pred) %>%
  filter(.metric == "rmse")

county_rmse
```
```

